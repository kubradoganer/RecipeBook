// <auto-generated />
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DataAccess.Migrations
{
    [DbContext(typeof(RecipeBookContext))]
    partial class RecipeBookContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DataAccess.Entities.IngredientType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'42', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("IngredientType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Su"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Süt"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Şeker"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Un"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tuz"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Çikolata"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Kakao"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Kabartma Tozu"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Vanilin"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Domates"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Marul"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Salatalık"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Soğan"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Turşu"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Limon"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Lime"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Bisküvi"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Krema"
                        },
                        new
                        {
                            Id = 19,
                            Name = "Buğday Nişastası"
                        },
                        new
                        {
                            Id = 20,
                            Name = "Mısır Nişastası"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Nutella"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Sirke"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Milföy"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Sosis"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Salça"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Kaşar Peyniri"
                        },
                        new
                        {
                            Id = 27,
                            Name = "Mozerella"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Sıvıyağ"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Zeytinyağ"
                        },
                        new
                        {
                            Id = 30,
                            Name = "Roka"
                        },
                        new
                        {
                            Id = 31,
                            Name = "Tavuk"
                        },
                        new
                        {
                            Id = 32,
                            Name = "Et"
                        },
                        new
                        {
                            Id = 33,
                            Name = "Balık"
                        },
                        new
                        {
                            Id = 34,
                            Name = "Kemalpaşa"
                        },
                        new
                        {
                            Id = 35,
                            Name = "Biber"
                        },
                        new
                        {
                            Id = 36,
                            Name = "Pirinç"
                        },
                        new
                        {
                            Id = 37,
                            Name = "Tavuk Suyu"
                        },
                        new
                        {
                            Id = 38,
                            Name = "Kekik"
                        },
                        new
                        {
                            Id = 39,
                            Name = "Karabiber"
                        },
                        new
                        {
                            Id = 40,
                            Name = "Pulbiber"
                        },
                        new
                        {
                            Id = 41,
                            Name = "Tereyağ"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.MeasurementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'17', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("MeasurementType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "250 ml"
                        },
                        new
                        {
                            Id = 2,
                            Name = "125 ml"
                        },
                        new
                        {
                            Id = 3,
                            Name = "50 ml"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Su Barağı"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Çay Bardağı"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Yemek Kaşığı"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Çay Kaşığı"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Tatlı Kaşığı"
                        },
                        new
                        {
                            Id = 9,
                            Name = "500 ml"
                        },
                        new
                        {
                            Id = 10,
                            Name = "1000 ml"
                        },
                        new
                        {
                            Id = 11,
                            Name = "1 pk"
                        },
                        new
                        {
                            Id = 12,
                            Name = "1 adet"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Gram"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Çimdik"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Yaprak"
                        },
                        new
                        {
                            Id = 16,
                            Name = "25 ml"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'5', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Menu");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Akşam Yemegi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Lezzetli Bir Mola"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tatlı ve Daha Fazlası"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pratik Menü"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.MenuItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'7', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("MenuId")
                        .HasColumnType("integer");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RecipeId");

                    b.ToTable("MenuItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MenuId = 1,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 2,
                            MenuId = 1,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 3,
                            MenuId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            MenuId = 3,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            MenuId = 3,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 6,
                            MenuId = 4,
                            RecipeId = 2
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'7', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("CreatedUserId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("RecipeTypeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreatedUserId");

                    b.HasIndex("RecipeTypeId");

                    b.ToTable("Recipe");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedUserId = 1,
                            Name = "İzmir Bombası",
                            RecipeTypeId = 6
                        },
                        new
                        {
                            Id = 2,
                            CreatedUserId = 4,
                            Name = "Tavuklu Salata",
                            RecipeTypeId = 3
                        },
                        new
                        {
                            Id = 3,
                            CreatedUserId = 2,
                            Name = "Kemalpaşa",
                            RecipeTypeId = 5
                        },
                        new
                        {
                            Id = 4,
                            CreatedUserId = 3,
                            Name = "Tavuk Sote",
                            RecipeTypeId = 2
                        },
                        new
                        {
                            Id = 5,
                            CreatedUserId = 1,
                            Name = "Et Sote",
                            RecipeTypeId = 4
                        },
                        new
                        {
                            Id = 6,
                            CreatedUserId = 1,
                            Name = "Tavuklu Pilav",
                            RecipeTypeId = 2
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'8', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RecipeBook");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kubra'nın Defteri",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ralph'un Defteri",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            Name = "Roy'un Defteri",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            Name = "John'un Defteri",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            Name = "Steve'n Defteri",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pierce'n Defteri",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Ewan'ın Defteri",
                            UserId = 7
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeBookItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'25', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RecipeBookId")
                        .HasColumnType("integer");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeBookId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeBookItem");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipeBookId = 1,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            RecipeBookId = 1,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 3,
                            RecipeBookId = 1,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 4,
                            RecipeBookId = 1,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 5,
                            RecipeBookId = 2,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 6,
                            RecipeBookId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 7,
                            RecipeBookId = 2,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 8,
                            RecipeBookId = 3,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 9,
                            RecipeBookId = 3,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 10,
                            RecipeBookId = 3,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 11,
                            RecipeBookId = 3,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 12,
                            RecipeBookId = 4,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 13,
                            RecipeBookId = 4,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 14,
                            RecipeBookId = 4,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 15,
                            RecipeBookId = 4,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 16,
                            RecipeBookId = 4,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 17,
                            RecipeBookId = 5,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 18,
                            RecipeBookId = 6,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 19,
                            RecipeBookId = 6,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 20,
                            RecipeBookId = 6,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 21,
                            RecipeBookId = 7,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 22,
                            RecipeBookId = 7,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 23,
                            RecipeBookId = 7,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 24,
                            RecipeBookId = 7,
                            RecipeId = 4
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeIngredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'41', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<int>("IngredientTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("MeasurementTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IngredientTypeId");

                    b.HasIndex("MeasurementTypeId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredient");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1m,
                            IngredientTypeId = 1,
                            MeasurementTypeId = 8,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Amount = 1m,
                            IngredientTypeId = 2,
                            MeasurementTypeId = 8,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Amount = 40m,
                            IngredientTypeId = 4,
                            MeasurementTypeId = 13,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Amount = 1m,
                            IngredientTypeId = 5,
                            MeasurementTypeId = 14,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Amount = 10m,
                            IngredientTypeId = 21,
                            MeasurementTypeId = 8,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 6,
                            Amount = 1m,
                            IngredientTypeId = 22,
                            MeasurementTypeId = 7,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 7,
                            Amount = 2m,
                            IngredientTypeId = 28,
                            MeasurementTypeId = 8,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 8,
                            Amount = 5m,
                            IngredientTypeId = 19,
                            MeasurementTypeId = 13,
                            RecipeId = 1
                        },
                        new
                        {
                            Id = 9,
                            Amount = 3m,
                            IngredientTypeId = 11,
                            MeasurementTypeId = 15,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 10,
                            Amount = 1m,
                            IngredientTypeId = 12,
                            MeasurementTypeId = 12,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 11,
                            Amount = 1m,
                            IngredientTypeId = 13,
                            MeasurementTypeId = 12,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 12,
                            Amount = 2m,
                            IngredientTypeId = 14,
                            MeasurementTypeId = 12,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 13,
                            Amount = 1m,
                            IngredientTypeId = 15,
                            MeasurementTypeId = 12,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 14,
                            Amount = 1m,
                            IngredientTypeId = 10,
                            MeasurementTypeId = 12,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 15,
                            Amount = 10m,
                            IngredientTypeId = 30,
                            MeasurementTypeId = 15,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 16,
                            Amount = 250m,
                            IngredientTypeId = 31,
                            MeasurementTypeId = 13,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 17,
                            Amount = 5m,
                            IngredientTypeId = 29,
                            MeasurementTypeId = 13,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 18,
                            Amount = 5m,
                            IngredientTypeId = 5,
                            MeasurementTypeId = 13,
                            RecipeId = 2
                        },
                        new
                        {
                            Id = 19,
                            Amount = 1m,
                            IngredientTypeId = 34,
                            MeasurementTypeId = 11,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 20,
                            Amount = 5m,
                            IngredientTypeId = 1,
                            MeasurementTypeId = 4,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 21,
                            Amount = 4m,
                            IngredientTypeId = 3,
                            MeasurementTypeId = 4,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 22,
                            Amount = 1m,
                            IngredientTypeId = 15,
                            MeasurementTypeId = 16,
                            RecipeId = 3
                        },
                        new
                        {
                            Id = 23,
                            Amount = 500m,
                            IngredientTypeId = 31,
                            MeasurementTypeId = 13,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 24,
                            Amount = 20m,
                            IngredientTypeId = 29,
                            MeasurementTypeId = 13,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 25,
                            Amount = 1m,
                            IngredientTypeId = 25,
                            MeasurementTypeId = 6,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 26,
                            Amount = 1m,
                            IngredientTypeId = 10,
                            MeasurementTypeId = 12,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 27,
                            Amount = 1m,
                            IngredientTypeId = 13,
                            MeasurementTypeId = 12,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 28,
                            Amount = 2m,
                            IngredientTypeId = 35,
                            MeasurementTypeId = 12,
                            RecipeId = 4
                        },
                        new
                        {
                            Id = 29,
                            Amount = 500m,
                            IngredientTypeId = 32,
                            MeasurementTypeId = 13,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 30,
                            Amount = 20m,
                            IngredientTypeId = 29,
                            MeasurementTypeId = 13,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 31,
                            Amount = 1m,
                            IngredientTypeId = 25,
                            MeasurementTypeId = 6,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 32,
                            Amount = 1m,
                            IngredientTypeId = 10,
                            MeasurementTypeId = 12,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 33,
                            Amount = 1m,
                            IngredientTypeId = 13,
                            MeasurementTypeId = 12,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 34,
                            Amount = 2m,
                            IngredientTypeId = 35,
                            MeasurementTypeId = 12,
                            RecipeId = 5
                        },
                        new
                        {
                            Id = 35,
                            Amount = 300m,
                            IngredientTypeId = 31,
                            MeasurementTypeId = 13,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 36,
                            Amount = 2m,
                            IngredientTypeId = 36,
                            MeasurementTypeId = 4,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 37,
                            Amount = 3m,
                            IngredientTypeId = 37,
                            MeasurementTypeId = 4,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 38,
                            Amount = 2m,
                            IngredientTypeId = 39,
                            MeasurementTypeId = 13,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 39,
                            Amount = 25m,
                            IngredientTypeId = 41,
                            MeasurementTypeId = 13,
                            RecipeId = 6
                        },
                        new
                        {
                            Id = 40,
                            Amount = 10m,
                            IngredientTypeId = 28,
                            MeasurementTypeId = 13,
                            RecipeId = 6
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'17', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer");

                    b.Property<int>("TagId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("RecipeId");

                    b.HasIndex("TagId");

                    b.ToTable("RecipeTag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RecipeId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 2,
                            RecipeId = 1,
                            TagId = 7
                        },
                        new
                        {
                            Id = 3,
                            RecipeId = 1,
                            TagId = 4
                        },
                        new
                        {
                            Id = 4,
                            RecipeId = 2,
                            TagId = 9
                        },
                        new
                        {
                            Id = 5,
                            RecipeId = 2,
                            TagId = 5
                        },
                        new
                        {
                            Id = 6,
                            RecipeId = 2,
                            TagId = 8
                        },
                        new
                        {
                            Id = 7,
                            RecipeId = 3,
                            TagId = 7
                        },
                        new
                        {
                            Id = 8,
                            RecipeId = 3,
                            TagId = 2
                        },
                        new
                        {
                            Id = 9,
                            RecipeId = 3,
                            TagId = 3
                        },
                        new
                        {
                            Id = 10,
                            RecipeId = 4,
                            TagId = 8
                        },
                        new
                        {
                            Id = 11,
                            RecipeId = 4,
                            TagId = 5
                        },
                        new
                        {
                            Id = 12,
                            RecipeId = 5,
                            TagId = 8
                        },
                        new
                        {
                            Id = 13,
                            RecipeId = 5,
                            TagId = 10
                        },
                        new
                        {
                            Id = 14,
                            RecipeId = 6,
                            TagId = 5
                        },
                        new
                        {
                            Id = 15,
                            RecipeId = 6,
                            TagId = 6
                        },
                        new
                        {
                            Id = 16,
                            RecipeId = 6,
                            TagId = 8
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'7', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("RecipeType");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Sütlü Tatlılar"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Tavuk Yemekleri"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Salatalar"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Et Yemekleri"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Şerbetli Tatlılar"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Çikolatalı  Tatlılar"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'11', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Çikolata"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Şerbet"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hamur"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pratik"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Tavuk"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pilav"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Tatlı"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Tuzlu"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Az Kalorili"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Etli"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:IdentitySequenceOptions", "'8', '1', '', '', 'False', '1'")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Kübra",
                            LastName = "Doğan Er",
                            PasswordHash = "sffsafsfsfsas",
                            Username = "dogankub"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ralph",
                            LastName = "Fiennes",
                            PasswordHash = "",
                            Username = "fiennes"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Roy",
                            LastName = "Scheider",
                            PasswordHash = "",
                            Username = "scheider"
                        },
                        new
                        {
                            Id = 4,
                            FirstName = "John",
                            LastName = "Candy",
                            PasswordHash = "",
                            Username = "candy"
                        },
                        new
                        {
                            Id = 5,
                            FirstName = "Steve",
                            LastName = "Buscemi",
                            PasswordHash = "",
                            Username = "buscemi"
                        },
                        new
                        {
                            Id = 6,
                            FirstName = "Pierce",
                            LastName = "Brosnan",
                            PasswordHash = "",
                            Username = "brosnan"
                        },
                        new
                        {
                            Id = 7,
                            FirstName = "Ewan",
                            LastName = "McGregor",
                            PasswordHash = "",
                            Username = "mcgregor"
                        });
                });

            modelBuilder.Entity("DataAccess.Entities.MenuItem", b =>
                {
                    b.HasOne("DataAccess.Entities.Menu", "Menu")
                        .WithMany("MenuItems")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Entities.Recipe", b =>
                {
                    b.HasOne("DataAccess.Entities.User", "CreatedUser")
                        .WithMany()
                        .HasForeignKey("CreatedUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.RecipeType", "RecipeType")
                        .WithMany()
                        .HasForeignKey("RecipeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeBook", b =>
                {
                    b.HasOne("DataAccess.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeBookItem", b =>
                {
                    b.HasOne("DataAccess.Entities.RecipeBook", "RecipeBook")
                        .WithMany("RecipeBookItems")
                        .HasForeignKey("RecipeBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Recipe", "Recipe")
                        .WithMany()
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeIngredient", b =>
                {
                    b.HasOne("DataAccess.Entities.IngredientType", "IngredientType")
                        .WithMany()
                        .HasForeignKey("IngredientTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.MeasurementType", "MeasurementType")
                        .WithMany()
                        .HasForeignKey("MeasurementTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DataAccess.Entities.RecipeTag", b =>
                {
                    b.HasOne("DataAccess.Entities.Recipe", "Recipe")
                        .WithMany("RecipeTags")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DataAccess.Entities.Tag", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
